# 評価データ
test = testing(initial_split)
# 分割データ
stratified_splits =
vfold_cv(train, v = 4, strata = "Status") %>%
with_seed(1234, .)
# 図の書式
theme_set(theme_linedraw(base_size = 25, base_family = "Helvetica"))
df =
tibble(
class=c("a","b","c","c","a","c","b","a","c","b","a"),
gender=c("M","F","F","M","F","M","M","F","M","M","F"),
height=c(162,150,168,173,162,198,182,154,175,160,172)
)
df %>%
nest_by(class)
df %>%
nest_by(class) %>%
pluck("data",1)
df %>%
group_nest(class)
df %>%
group_by(class) %>%
summarise(
mean=
mean(height)
)
df %>%
nest_by(class) %>%
mutate(
mean=
mean(data$height)
)
make_fig=
function(df,class){
fig=
df %>%
ggplot(aes(x=carat,y=price))+
geom_point(color="orange")+
labs(title=class)+
theme(
axis.text=element_text(size=15),
axis.title=element_text(size=15),
plot.title=element_text(hjust = 0.5)
)
return(fig)
}
diamonds %>%
nest_by(cut)
diamonds %>%
nest_by(cut) %>%
mutate(
func=list(make_fig)
)
diamonds_1=
diamonds %>%
nest_by(cut) %>%
mutate(
func=list(make_fig)
)
diamonds_1
make_fig
diamonds_1 %>%
mutate(
fig=func(df=data,class=cut)
)
diamonds_1 %>%
mutate(
fig=
list(
func(df=data,class=cut))
)
diamonds_1 %>%
mutate(
fig=
list(
func(df=data,class=cut)
)
) %>%
pluck("fig",1)
diamonds_1 %>%
mutate(
fig=
list(
func(df=data,class=cut)
)
) %>%
pluck("fig",2)
diamonds_2=
diamonds_1 %>%
mutate(
fig=
list(
func(df=data,class=cut)
)
) %>%
pluck("fig",2)
diamonds_2 %>%
pull(fig) %>%
wrap_plots()
{patchwork}
diamonds_2 %>%
pull(fig) %>%
wrap_plots()
library(patchwork)
{patchwork}
{patchwork}
diamonds_2 %>%
pull(fig) %>%
wrap_plots()
diamonds_2=
diamonds_1 %>%
mutate(
fig=
list(
func(df=data,class=cut)
)
)
{patchwork}
diamonds_2 %>%
pull(fig) %>%
wrap_plots()
library(patchwork)
diamonds_2 %>%
mutate(
model=
list(
lm(
formula=price~carat,
data=data
)
)
)
diamonds_3=
diamonds_2 %>%
mutate(
model=
list(
lm(
formula=price~carat,
data=data
)
)
)
diamonds %>%
arrange(depth)
diamonds %>%
arrange(desc(depth))
diamonds %>%
arrange(depth,table)
diamonds %>%
distinct(cut,.keep_all=TRUE)
diamonds %>%
distinct(cut,color)
diamonds %>%
distinct(color)
diamonds %>%
group_by(color) %>%
summarise(across(depth:price,mean))
diamonds %>%
group_by(color) %>%
summarise(
depth=mean(depth),
table=mean(table),
price=mean(price)
)
diamonds %>%
group_by(color) %>%
summarise(across(where(is.numeric),
~mean(.x)/sd(.x)
)
)
library(plotly)
library(skimr)
library(GGally)
library(withr)
library(tabnet)
library(modeldata)
library(patchwork)
# なぜか.RprofileからDALEXtraを読み込もうとするとエラーが発生．．．
#library(DALEXtra)
# データ定義：クレジットデータ
data("credit_data")
credit_data = tibble(credit_data)
# 既知データ
known =
credit_data %>%
initial_split(known, prop = 0.8, strata = "Status") %>%
with_seed(1234, .) %>%
training()
# 未知データ
unknown =
credit_data %>%
initial_split(known, prop = 0.8, strata = "Status") %>%
with_seed(1234, .) %>%
testing()
# 初期分割データ
initial_split =
initial_split(known, prop = 0.8, strata = "Status") %>%
with_seed(1234, .)
# 学習データ
train = training(initial_split)
# 評価データ
test = testing(initial_split)
# 分割データ
stratified_splits =
vfold_cv(train, v = 4, strata = "Status") %>%
with_seed(1234, .)
# 図の書式
theme_set(theme_linedraw(base_size = 25, base_family = "Helvetica"))
diamonds %>%
group_by(color) %>%
summarise(across(where(is.numeric),
~mean(.x)/sd(.x)
)
)
diamonds %>%
mutate(
across(where(is.numeric)),
~(.x-mean(.x))/sd(.x)
)
diamonds %>%
mutate(
across(where(is.numeric),
~(.x-mean(.x))/sd(.x)
)
)
df_wide=tibble(
store=c("A","B","C"),
orange=c(100,70,120),
apple=c(150,90,80)
)
df_wide
df wide %>%
pivot_longer(
cols=c(orange,apple)
)
df_wide %>%
pivot_longer(
cols=c(orange,apple)
)
df_wide %>%
pivot_longer(
cols=c(orange,apple),
names_to = "fruit",
values_to = "price"
)
df_long=
df_wide %>%
pivot_longer(
cols=c(orange,apple),
names_to = "fruit",
values_to = "price"
)
df_long %>%
pivot_wider(
names_from = fruit,
values_from = price
)
df_unite=
tibble(
No.=1:5,
date=
c("2019-1","2020-3","2017-12","2018-9","2015-4")
)
df_unite
df_unite %>%
separate(
col=date,
into=c("year","month"),
sep="-"
)
df_separate %>%
unite(
col=date,year,month,
)
df_separate %>%
unite(
col=date,year,month
)
df_separate=
df_unite %>%
separate(
col=date,
into=c("year","month"),
sep="-"
)
df_separate %>%
unite(
col=date,year,month
)
df_separate %>%
unite(
col=date,year,month,
sep="-"
)
ggplot(
data=iris,
mapping=
aes(x=Sepal.Length,y=Petal.Langth)
)
ggplot(
data=iris,
mapping=
aes(x=Sepal.Length,y=Petal.Length)
)
ggplot(
data=iris,
mapping=
aes(x=Sepal.Length,y=Petal.Length)
)+
geom_point()
ggplot(
data=iris,
mapping=
aes(x=Sepal.Length,y=Petal.Length)
)+
geom_point()+
geom_smooth(method = "lm",se=FALSE)
ggplot(
data=iris,
mapping=
aes(x=Sepal.Length,y=Petal.Length)
)+
geom_point()+
geom_smooth(method = "lm",se=FALSE)+
theme(
panel.background =
element_rect(fill="pink",color="orange" size=5),
axis.text=element_text(size=15),
axis.tible=element_text(size=15)
)
ggplot(
data=iris,
mapping=
aes(x=Sepal.Length,y=Petal.Length)
)+
geom_point()+
geom_smooth(method = "lm",se=FALSE)+
theme(
panel.background =
element_rect(fill="pink",color="orange" size=5),
axis.text=element_text(size=15),
axis.title=element_text(size=15)
)
ggplot(
data=iris,
mapping=
aes(x=Sepal.Length,y=Petal.Length)
)+
geom_point()+
geom_smooth(method = "lm",se=FALSE)+
theme(
panel.background =
element_rect(fill="pink",color="orange", size=5),
axis.text=element_text(size=15),
axis.title=element_text(size=15)
)
df = nycflights13::weather %>%
drop_na()
library(nycflights13)
library(nycflights)
library(nycflight)
install.packages("nycflights13")
library(nycflight13)
library(nycflight13)
library(nycflight)
df = nycflights13::weather %>%
drop_na()
df
df %>%
ggplot(
aes(x=humid)
)
df %>%
ggplot(
aes(x=humid)
)+
geom_histogram()
df %>%
ggplot(
aes(x=humid)
)+
geom_histogram(bins=10)
df %>%
ggplot(
aes(x=humid)
)+
geom_histogram(binwidth=20)
df %>%
distinct(origin)
df %>%
ggplot(
aes(x=humid,fill=origin)
)+
geom_histogram(bins=10)
df %>%
ggplot(
aes(x=humid,fill=origin)
)+
geom_histogram(bins=10)
df %>%
distinct(origin)
df %>%
ggplot(
aes(x=humid,fill=origin)
)+
geom_histogram(bins=10)
df %>%
ggplot(
aes(x=humid,fill=origin)
)+
geom_density()
df %>%
ggplot(
aes(x=humid,fill=origin)
)+
geom_density(alpha=0.6)
df %>%
ggplot(
aes(x=temp,y=humid)
)
df %>%
ggplot(
aes(x=temp,y=humid)
)+
geom_point()
df %>%
ggplot(
aes(x=temp,y=humid,color=origin)
)+
geom_point()
GGally::ggpairs()
GGally::ggpairs()
df %>%
select(temp:wind_dir,origin) %>%
ggpairs()
df %>%
select(temp:wind_dir,origin) %>%
ggpairs(aes(color=origin))
ggplot(
aes(x=time_hour,y=temp)
)
df %>%
select(time_hour,temp) %>%
ggplot(
aes(x=time_hour,y=temp)
)+
geom_line()
df %>%
select(time_hour,temp) %>%
ggplot(
aes(x=time_hour,y=temp)
)+
geom_line()+
scale_x_datetime(date_labels = "%Y-%m")
str_length(c("a","the","apple"))
str_c("nogi","sakura","hinata")
str_c("nogi","sakura","hinata",sep="_")
vec_1=c("nogi","sakura","hinata")
vec_2=c("mai","ponpon","sarina")
str_c(vec_1,vec_2,sep="-")
str_c(vec_1,collapse = "...")
str_sub("qwertyuiop@",start = 2,end = 5)
str_sub("qwertyuiop@",start = -8,end = -5)
vec_group=c("nogi","sakura","hinata")
str_detect(vec_group,pattern = "a")
str_subset(vec_group,pattern = "a")
vec_group=c("nogi","sakura","hinata")
str_extract(vec_group,pattern = "a")
str_extract_all("nogi","sakura","hinata")
vec_group=c("nogi","sakura","hinata")
str_extract_all("nogi","sakura","hinata")
str_extract_all(vec_group,pattern = "a")
str_extract_all(vec_group,pattern = "a",simplify = TRUE)
vec_name=c("asuka","mizuki","minami")
str_replace(vec_name,pattern = "a",replacement = "-")
str_replace_all(vec_name,pattern = "a",replacement = "-")
str_replace_all(vec_name,c("a"="A","m"="M"))
str_split(vec_name,pattern = "u")
str_split(vec_name,pattern = "u",simplify = TRUE)
economics_long
getwd()
economics_long %>%
write_csv("df_economics_long.csv")
economics_long %>%
write_csv("csv/df_economics_long.csv")
economics_long %>%
write.csv("csv/df_economics_long.csv",
fileEncoding = "shift-jis",
row.names = FALSE)
read_csv("csv/df_economics_long.csv")
read_csv("csv/df_economics_long.csv",
col_types=cols(date=col_character()
)
)
col_types=cols(date="c")
read_csv("csv/df_economics_long.csv",
col_types = cols(.default = "c")) %>%
type_convert()
read_csv("csv/df_economics_long.csv",
locale = locale(encoding = "shift-jis"))
economics_long %>&
nest_by(variable)
economics_long %>%
nest_by(variable)
df_economics_long_nest=
economics_long %>%
nest_by(variable)
df_economics_long_nest %>%
write_rds("csv/df_economics_long_nest.rds")
read_rds("csv/df_economics_long_nest.rds")
